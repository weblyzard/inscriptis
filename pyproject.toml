[project]
name = "inscriptis"
version = "2.7.0"
description = "inscriptis - HTML to text converter."
license = "Apache-2.0"
readme = "README.rst"
requires-python = ">=3.9,<3.14"

authors = [
        { name = "Albert Weichselbraun", email = "albert.weichselbraun@fhgr.ch" },
        { name = "Fabian Odoni", email = "fabian.odoni@fhgr.ch" }
]

keywords = ["HTML", "converter", "text"]

classifiers = [
        "Development Status :: 5 - Production/Stable",
        "Intended Audience :: Developers",
        "Topic :: Text Processing",
        "Topic :: Text Processing :: Markup :: HTML",
        "Topic :: Utilities",
        "Programming Language :: Python :: 3",
        "Programming Language :: Python :: 3.9",
        "Programming Language :: Python :: 3.10",
        "Programming Language :: Python :: 3.11",
        "Programming Language :: Python :: 3.12",
        "Programming Language :: Python :: 3.13",
    ]

dependencies = [
  "requests>=2.32.3,<3.0.0",
  "lxml>=5.4.0,<6.0.0",
]

[project.urls]
Homepage = "https://github.com/weblyzard/inscriptis"
Repository = "https://github.com/weblyzard/inscriptis"
Documentation = "https://inscriptis.readthedocs.io/en/latest/"

[project.scripts]
inscript = "inscriptis.cli.inscript:cli"
inscriptis-api = "inscriptis.service.web:start"

[project.optional-dependencies]
web-service = [
  "fastapi>=0.115.11,<1.0.0",
  "uvicorn>=0.34.0,<1.0.0"
]

[dependency-groups]
dev = [
    "pytest>=8.3.5",
    "fastapi>=0.115.11,<1.0.0",
    "ruff>=0.11.12",
    "httpx>=0.28.1",
    "uvicorn>=0.34.2",
    "ty>=0.0.1a7",
    "pytest-cov>=6.1.1",
    "safety>=3.5.1",
]
[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build]
sources = ["src"]

# code formatting with ruff
[tool.ruff]
line-length = 120
target-version = "py311"  # adjust as needed
extend-exclude = ["*.html", "*.json", "*.txt", "/a", "/b", "docs/conf.py"]
src = ["src", "tests", "benchmarking", "examples"]

[tool.ruff.format]
quote-style = "double"

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-builtins
    "A",
    # flake8-bugbear
    "B",
    # flake8-comprehensions
    "C4",
    # flake8-errmsg
    "EM",
    # flake8-quotes
    "Q",
    # flake8-pyi
    "PYI",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    "RSE", "RET", "SLOT", "TID", "TC", "C90", "N", "PERF", "E", "W", 
    "UP", "FURB", "RUF", "TRY", "YTT"
]

[tool.ty.src]
root="./src"

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "--cov=inscriptis --cov-report=term-missing"
